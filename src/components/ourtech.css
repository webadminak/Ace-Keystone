/* General Layout */
.services-container {
  min-height: 100vh;
  background: whitesmoke;
  padding: 64px 16px;
  margin-top: 180px;
  text-align: center;
}

@media  (min-width: 300px) and (max-width: 1440px) {
  .services-container {
    margin-top: 140px !important;
  }
}
.main-heading {
  font-size: 36px;
  font-weight: bold;
  color: #1f2937;
  margin-bottom: 16px;
  text-transform: none;
}

.main-description {
  font-size: 16px;
  color: #1f1c1c;
  max-width: 1000px;
  margin: 0 auto 48px;
  text-align: center;
}

.main-description :hover{
 color: #1f1c1c;
}

.card-grid {
  display: flex;
  flex-direction: column;
  gap: 32px;
  max-width: 1200px;
  margin: 0 auto;
}

.card-row {
  display: flex;
  gap: 32px;
  justify-content: center;
  flex-wrap: wrap;
}

.card-row.single {
  justify-content: center;
}

/* Service Card */
.service-card {
  position: relative;
  border-radius: 10px;
  overflow: hidden;
  width: 100%;
  max-width: 550px;
  height: 420px;
  cursor: pointer;
  transition: transform 0.05s ease;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.service-card-image {
  position: absolute;
  inset: 0;
  z-index: 1;
}

.service-card-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: opacity 0.05s ease;
}

.service-card-gradient {
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), transparent);
  z-index: 2;
}

.service-card-title-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  padding: 20px;
  z-index: 3;
}

.service-title {
  font-size: 25px;
  font-weight: bold;
  color: white;
  padding: 10px;
  margin: 0;
  transition: color 0.05s ease;
}

.service-hover-content {
  position: absolute;
  inset: 0;
  background-color: white;
  color: #1f2937;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 24px;
  opacity: 0;
  z-index: 2;
  transition: opacity 0.05s ease;
}

.service-hover-content h3 {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 12px;
}

.service-hover-content p {
  font-size: 14px;
  color: #4b5563;
  margin-bottom: 20px;
}

/* Footer */
.footer {
  background-color: #0F1035;
  color: white;
  padding: 30px;
  margin-top: 170px;
  margin-bottom: 0px;
}

/* Responsive Media Queries */
@media (max-width: 1440px) {
  .main-heading {
    font-size: 36px;
  }
  .service-card {
    padding: 32px 16px;
  }
}

@media (max-width: 1024px) {
  .main-heading {
    font-size: 32px;
  }
  .main-description {
    font-size: 14px !important ;
    padding-left: 30px;
    padding-right: 30px;
  }
  .service-title {
    font-size: 18px;
  }
  .service-card {
    padding: 28px 16px;
    width: 40%;
    height: 370px;
  }
}

@media (max-width: 768px) {
  .main-heading {
    font-size: 28px;
  }
  .main-description {
    font-size: 14px;
    margin-bottom: 32px;
  }
  .card-row {
    flex-direction: column;
    align-items: center;
  }
  .service-card {
    padding: 24px 12px;
    max-width: 100%;
  }
}

@media (max-width: 4350px) {
  .main-heading {
    font-size: 24px;
  }
  .main-description {
    font-size: 15px;
  }
  .service-card {
    padding: 20px 10px;
    width: 450px;
  }
  .service-title {
    font-size: 20px;
  }
  .service-hover-content {
    font-size: 13px;
    padding: 16px;
  }
}







.form-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 2000;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
}

.form-container {
  background: #fff;
  border-radius: 14px;
  width: min(880px, 95%);
  max-height: 80vh;
  overflow-y: auto;
  padding: 40px 50px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.25);
  position: relative;
  top: 80px;
}

.close-btn {
  position: absolute;
  top: 16px;
  right: 20px;
  font-size: 28px;
  border: none;
  background: transparent;
  cursor: pointer;
  color: #444;
}

.form-heading {
  font-size: 22px;
  font-weight: 600;
  margin-bottom: 20px;
  color: #012945;
  border-bottom: 2px solid #eee;
  padding-bottom: 8px;
}

form label {
  display: block;
  margin: 14px 0 6px;
  font-weight: 500;
  color: #222;
}

form input,
form textarea {
  width: 100%;
  padding: 12px 14px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 15px;
  resize: none;
  outline: none;
  transition: border-color 0.2s, box-shadow 0.2s;
}

form input:focus,
form textarea:focus {
  border-color: #00796b;
  box-shadow: 0 0 0 3px rgba(0, 121, 107, 0.2);
}

.form-navigation {
  display: flex;
  align-items: center;
  margin-top: 28px;
  gap: 12px;
}

.nav-btn,
.submit-btn {
  padding: 12px 22px;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  border: none;
  font-size: 15px;
}

.nav-btn.back {
  background: #f3f3f3;
  color: #333;
}

.nav-btn.next {
  background: #00796b;
  color: #fff;
}

.submit-btn {
  background: #00695c;
  color: #fff;
}

.step-indicator {
  margin-left: auto;
  font-size: 14px;
  color: #777;
}
/* ----- Radio list styled like screenshot ----- */
.radio-list {
  display: flex;
  flex-direction: column;
  gap: 18px;
  margin-top: 10px;
}


.radio-visual {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid #bfcfcf;
  display: inline-block;
  position: relative;
  flex: 0 0 20px;
  transition: border-color 0.18s ease, background-color 0.18s ease;
}

/* inner dot when checked */
.radio-visual::after {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  left: 0%;
  top: 20%;
  transform: translate(-50%, -50%) scale(0);
  background: #ffc400;
  transition: transform 0.18s ease;
}

/* label text */
.radio-label {
  font-size: 15px;
  color: #183240;
  line-height: 1;
}

/* checked state */
.radio-item.checked .radio-visual {
  border-color: #00796b;
  background: rgba(0, 121, 107, 0.04);
}

.radio-item.checked .radio-visual::after {
  transform: translate(-50%, -50%) scale(1);
}

/* inline other input when 'Other' is selected */
.inline-other {
  margin-left: 12px;
  padding: 8px 10px;
  border-radius: 6px;
  border: 1px solid #d7d7d7;
  width: 320px;
  max-width: 40%;
  font-size: 14px;
}

/* smaller on mobile */
@media (max-width: 720px) {
  .inline-other {
    width: 100%;
    max-width: 100%;
    margin-left: 8px;
    margin-top: 8px;
  }

 
}

/* form page min-height and premium inputs (kept from previous styling) */
.form-page {
  min-height: 420px;
  display: flex;
  flex-direction: column;
  gap: 14px;
}

.form-heading {
  margin-bottom: 12px;
  font-size: 20px;
  font-weight: 600;
  color: #012945;
}

form label {
  font-weight: 500;
  margin-top: 8px;
  color: #333;
}

form input,
form textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 15px;
  transition: box-shadow 0.2s ease, border 0.2s ease;
}

form input:focus,
form textarea:focus {
  border-color: #00796b;
  box-shadow: 0 0 0 3px rgba(0, 121, 107, 0.12);
  outline: none;
}

.required { color: red; }

/* checkbox/radio group spacing */
.checkbox-group {
  display: flex;
  flex-direction: column;
  gap: 6px;
  margin-bottom: 12px;
}

/* submission area */
.ack-box {
  padding: 14px;
  border: 1px solid #eee;
  border-radius: 8px;
  background: #fafafa;
  font-size: 14px;
}

.submit-section {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}

.submit-btn {
  padding: 12px 20px;
  background: #00695c;
  border: none;
  border-radius: 8px;
  color: #fff;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
}

.nav-btn {
  padding: 10px 16px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
}

.nav-btn.back {
  background: #f2f2f2;
  border: 1px solid #ccc;
}

.nav-btn.next {
  background: #ffbc04;
  color: #fff;
  border: none;
}

.step-indicator {
  margin-left: auto;
  font-size: 14px;
  color: #777;
}

/* responsive */
@media (max-width: 720px) {
  .form-container { padding: 20px; width: 96%; }
  .form-heading { font-size: 18px; }
  .radio-visual { width: 18px; height: 18px; }
  .radio-label { font-size: 14px; }
}
/* --- Acknowledgement box inline under textarea (full width) --- */
.ack-box {
  padding: 14px;
  border: 1px solid #eee;
  border-radius: 8px;
  background: #fafafa;
  font-size: 14px;
  margin-top: 12px;
  width: 100%;
  box-sizing: border-box;
}

/* make the ack layout horizontal and aligned with textarea width */
.ack-inline .ack-label {
  display: flex;
  gap: 14px;
  align-items: flex-start;
}

/* checkbox styling */
.ack-inline .ack-label input[type="checkbox"] {
  width: 18px;
  height: 18px;
  margin-top: 6px;
}

/* the text block uses remaining width */
.ack-text {
  line-height: 1.36;
  color: #2b3b40;
  font-size: 14px;
}

/* emphasize small heading */
.ack-text strong {
  display: block;
  margin-bottom: 6px;
  color: #0f2a33;
}

/* Submit button inline (big, elevated, sits under ack) */
.submit-btn-inline {
  width: 100%;
  padding: 12px 18px;
  border-radius: 8px;
  font-weight: 700;
  font-size: 16px;
  background: linear-gradient(180deg, #f39c3f 0%, #e88a25 100%);
  border: none;
  color: #fff;
  box-shadow: 0 8px 20px rgba(232, 138, 37, 0.22);
  cursor: pointer;
}

/* remove the step indicator text entirely */
.step-indicator {
  display: none !important;
}

/* responsive tweaks so ack text stays horizontal on wider screens but wraps nicely on mobile */
@media (min-width: 720px) {
  .ack-inline .ack-label { align-items: center; }
}

@media (max-width: 720px) {
  .ack-inline .ack-label { flex-direction: row; gap: 10px; }
  .ack-text { font-size: 13.5px; }
  .submit-btn-inline { font-size: 15px; padding: 12px; }
}
/* ------------------ RADIO (single source of truth) ------------------ */
.radio-list {
  display: flex;
  flex-direction: column;
  gap: 18px;
  margin-top: 10px;
}

/* each row - flex ensures perfect vertical centering */
.radio-item {
  display: flex;
  align-items: center;
  gap: 14px;
  cursor: pointer;
  padding: 6px 4px;
  user-select: none;
}

/* hide the native input (we use custom visual) */
.radio-item input[type="radio"] {
  display: none;
  pointer-events: none;
}

/* outer circle - inline-flex centers inner dot reliably */
.radio-visual {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid #bfcfcf;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  flex: 0 0 20px;
  transition: border-color 0.18s ease, background-color 0.18s ease;
  box-sizing: border-box;
  background: transparent;
}

/* centered inner dot (scale animation) */
.radio-visual::after {
  content: "";
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #ffbc04;
  transform: scale(0);
  transform-origin: center center;
  transition: transform 0.14s ease;
  display: block;
}

/* When React adds `.checked` to the .radio-item, show the dot */
.radio-item.checked .radio-visual {
  border-color: #ffbc04;
  background: rgba(0,121,107,0.04);
}
.radio-item.checked .radio-visual::after {
  transform: scale(1);
}

/* label text */
.radio-label {
  font-size: 15px;
  color: #183240;
  line-height: 1;
  display: inline-block;
  vertical-align: middle;
}

/* inline other input */
.inline-other {
  margin-left: 12px;
  padding: 8px 10px;
  border-radius: 6px;
  border: 1px solid #d7d7d7;
  width: 320px;
  max-width: 40%;
  font-size: 14px;
  align-self: center;
  box-sizing: border-box;
}

/* responsive: inline-other becomes full-width below 720px */
@media (max-width: 720px) {
  .inline-other {
    width: 100%;
    max-width: 100%;
    margin-left: 8px;
    margin-top: 8px;
  }
  .radio-item { gap: 10px; }
}

.connect-btn {
  background: linear-gradient(135deg, #164d8b, #2979ff);
  color: #fff;
  font-size: 15px;
  font-weight: 600;
  padding: 10px 22px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  margin-top: 12px;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(22, 77, 139, 0.25);
}

.connect-btn:hover {
  background: linear-gradient(135deg, #2979ff, #164d8b);
  transform: translateY(-2px);
  box-shadow: 0 6px 18px rgba(22, 77, 139, 0.35);
}

.connect-btn:active {
  transform: scale(0.96);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.connect-btn:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(41, 121, 255, 0.4);
}
  /* ---------- Mobile / Touch: show overlay on touch (does NOT change desktop hover) ---------- */
@media (hover: none) and (pointer: coarse) {
  /* improve touch feel */
  .service-card {
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
    user-select: none;
  }

  /* temporary reveal while pressing (immediate feedback) */
  .service-card:active .service-hover-content {
    opacity: 1 !important;
    transform: translateY(0) !important;
    pointer-events: auto !important;
    transition: opacity 180ms ease, transform 220ms cubic-bezier(.2,.9,.2,1);
    z-index: 5;
  }

  /* if the card's inner elements receive focus (e.g. an anchor or button inside),
     keep the overlay visible while focused (useful for accessibility/touch navigation) */
  .service-card:focus-within .service-hover-content,
  .service-card .service-hover-content:focus-within {
    opacity: 1 !important;
    transform: translateY(0) !important;
    pointer-events: auto !important;
    z-index: 5;
  }

  /* small tactile feedback on touch devices */
  .service-card:active {
    transform: translateY(-4px);
    box-shadow: 0 18px 40px rgba(0,0,0,0.12);
    transition: transform 160ms ease, box-shadow 160ms ease;
  }

  /* ensure the image also slightly scales for depth when active */
  .service-card:active .service-card-image img {
    transform: scale(1.03);
    filter: brightness(0.92);
    transition: transform 220ms ease, filter 220ms ease;
  }

  /* make sure interactive elements inside the overlay remain tappable */
  .service-hover-content a,
  .service-hover-content button {
    pointer-events: auto;
  }
}

/* Optional: support older devices where (hover:none) may not match; small fallback */
@media (max-width: 1024px) {
  .service-card:active .service-hover-content {
    opacity: 1 !important;
    transform: translateY(0) !important;
    pointer-events: auto !important;
    z-index: 5;
  }
}
/* =========================
   Persistent "opened" overlay
   (drop-in: put this at end of ourtech.css)
   ========================= */

/* Ensure overlay is hidden by default and positioned for smooth transition */
.service-hover-content {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transform: translateY(6px);
  transition: opacity 220ms cubic-bezier(.2,.9,.2,1), transform 260ms cubic-bezier(.2,.9,.2,1), visibility 0ms linear 220ms;
  z-index: 2;
  will-change: opacity, transform;
}

/* Make the overlay visible when card is hovered (desktop) or when JS opens the card */
.service-card:hover .service-hover-content,
.service-card.is-open .service-hover-content {
  opacity: 1 !important;
  visibility: visible !important;
  pointer-events: auto !important;
  transform: translateY(0) !important;
  transition-delay: 0ms;
  transition-duration: 200ms;
  z-index: 6 !important;
}

/* Slight lift + stronger shadow for open state for visual clarity */
.service-card.is-open {
  transform: translateY(-6px) !important;
  box-shadow: 0 18px 44px rgba(0,0,0,0.16) !important;
  transition: transform 180ms cubic-bezier(.2,.9,.2,1), box-shadow 180ms ease;
}

/* Dim the background image when card is open to accent overlay text */
.service-card.is-open .service-card-image img {
  filter: brightness(0.52) saturate(0.9);
  transform: scale(1.02);
  transition: filter 220ms ease, transform 220ms ease;
}

/* Keep title readable above the dimmed image when open */
.service-card.is-open .service-title {
  color: #fff !important;
  text-shadow: 0 6px 18px rgba(0,0,0,0.45);
}

/* Make sure interactive elements inside overlay are reachable on mobile */
.service-card.is-open .service-hover-content * {
  pointer-events: auto !important;
}

/* Keyboard accessibility: keep same visible state on focus */
.service-card:focus,
.service-card:focus .service-hover-content,
.service-card.is-open:focus {
  outline: none;
  transform: translateY(-4px);
  transition: transform 140ms ease;
}

/* Touch device transient feedback still fine; but ensure JS-open wins */
@media (hover: none), (pointer: coarse) {
  /* When user taps (active) show transient overlay quickly — JS .is-open will persist it */
  .service-card:active .service-hover-content {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: translateY(0) !important;
    transition-duration: 120ms !important;
  }

  /* Remove accidental tap highlight */
  .service-card {
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }
}

/* Defensive: if any other rules hide overlay using !important,
   this selector is specific and should still win. */
body .service-card.is-open .service-hover-content {
  opacity: 1 !important;
  visibility: visible !important;
  pointer-events: auto !important;
}

/* Optional: small close animation when .is-open removed */
.service-hover-content {
  transition-timing-function: cubic-bezier(.2,.9,.2,1);
}
